/*
Main Tasks:
- build
- aggregateJavadocs
 */
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.2'
        classpath 'com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+'
    }
}

allprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'

    group 'me.andrew28.addons'
    version '1.3.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

subprojects {
    repositories {
        //All sub-projects will now refer to the same 'libs' directory
        flatDir {
            dirs "$rootProject.projectDir/libs"
        }
        mavenLocal()
        mavenCentral()
        // bensku Repository
        maven {
            url "https://raw.githubusercontent.com/bensku/mvn-repo/master"
        }
        // Spigot Repository
        maven {
            url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
        }
        // Sonatype Repository
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots"
        }
        // drtshock Repository
        maven {
            url 'https://ci.ender.zone/plugin/repository/everything/'
        }
        // bStats Repository
        maven {
            url 'http://repo.bstats.org/content/repositories/releases/'
        }
        // JitPack Repository
        maven {
            url 'https://jitpack.io'
        }
    }

    dependencies {
        compileOnly group: 'org.spigotmc', name: 'spigot-api', version: '1.12.2-R0.1-SNAPSHOT'
        compileOnly (group: 'ch.njol', name: 'skript', version: '2.2-dev32') {
            transitive = false
        }
    }

    processResources {
        filter ReplaceTokens, tokens: [
                "version": project.property("version")
        ]
    }
}

apply plugin: 'nebula-aggregate-javadocs'

// Combine all modules into one jar
subprojects.each { subproject -> evaluationDependsOn(subproject.path)}
task allJar(type: Jar, dependsOn: subprojects.shadowJar) {
    baseName = 'Conquer'
    subprojects.each { subproject ->
        from subproject.configurations.archives.allArtifacts.files.collect {
            zipTree(it)
        }
    }
}

tasks.withType(Javadoc) {
    options {
        links 'https://docs.oracle.com/javase/8/docs/api/', 'http://hub.spigotmc.org/javadocs/spigot/', 'http://nfell2009.uk/skript/javadoc/'
    }
}

jar.enabled = false
build.dependsOn(allJar)

artifacts {
    allJar
}